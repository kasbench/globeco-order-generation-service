apiVersion: apps/v1
kind: Deployment
metadata:
  name: globeco-order-generation-service
  namespace: globeco
  labels:
    app: globeco-order-generation-service
    component: order-generation
    version: v1
    tier: application
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: globeco-order-generation-service
  template:
    metadata:
      labels:
        app: globeco-order-generation-service
        component: order-generation
        version: v1
        tier: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: order-generation-service
        image: kasbench/globeco-order-generation-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: globeco-order-generation-service-secrets
              key: mongodb-url
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: database-name
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: globeco-order-generation-service-secrets
              key: secret-key
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: log-level
        - name: OPTIMIZATION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: optimization-timeout
        - name: PORTFOLIO_ACCOUNTING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: portfolio-accounting-service-url
        - name: PRICING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: pricing-service-url
        - name: PORTFOLIO_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: portfolio-service-url
        - name: SECURITY_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: security-service-url
        - name: ORDER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: globeco-order-generation-service-config
              key: order-service-url
        envFrom:
        - configMapRef:
            name: globeco-order-generation-service-config
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/live
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: globeco-order-generation-service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - globeco-order-generation-service
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
